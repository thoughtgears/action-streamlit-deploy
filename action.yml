name: Streamlit Deploy
description: Deploy streamlit to Cloud Run
inputs:
  terraform-version:
    description: The version of Terraform to use
    default: 1.8.5
  terraform_directory:
    description: The directory containing the Terraform configuration
    default: terraform
  region:
    description: GCP Region to deploy to
    default: europe-west1
  project:
    description: GCP Project to deploy to
    required: true
  github_token:
    description: GitHub token to use in the action for different steps
    required: true
  streamlit_name:
    description: The name of the streamlit app
    required: true

outputs:
  cloud_run_url:
    description: The URL of the deployed Cloud Run streamlit app
    value: ${{ steps.random-number-generator.outputs.random-number }}

runs:
  using: composite

  steps:
    - name: Setup Terraform
      id: setup-terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform_version }}

    - name: Get Last Successful Run
      id: get-last-run
      uses: actions/github-script@v7
      with:
        script: |
          const path = require('path');
          const workflow = context.workflow;
          const workflow_id = path.basename(workflow);
          
          const resp = await github.rest.actions.listWorkflowRuns({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: workflow,
            status: 'success',
            per_page: '1'
          });
          core.exportVariable('run_id', resp.data.workflow_runs[0].id);

    - name: Download Terraform State Artifact
      id: download-artifact
      uses: actions/download-artifact@v4
      continue-on-error: true
      with:
        path: ${{ inputs.terraform_directory }}
        run-id: ${{ env.run_id }}

    - name: Terraform Run
      id: terraform-run
      shell: bash
      run: |
        terraform init
        terraform validate
        terraform plan -out=tf.plan --var region=${{ inputs.region }} --var project_id=${{ inputs.project }} -var streamlit_name=${{ inputs.streamlit_name }}
        terraform apply tf.plan
      working-directory: ${{ inputs.terraform_directory }}

    - name: Upload Terraform State Artifact
      id: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: terraform.tfstate
        path: ${{ inputs.terraform_directory }}/terraform.tfstate
        retention-days: 90
